// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using buyge_backend.db;

#nullable disable

namespace buyge_backend.Migrations
{
    [DbContext(typeof(bdbuygeContext))]
    partial class bdbuygeContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_general_ci")
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("buyge_backend.db.TbCarrinho", b =>
                {
                    b.Property<int>("CdCarrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_carrinho");

                    b.Property<int>("FkCdCliente")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_cliente");

                    b.HasKey("CdCarrinho", "FkCdCliente")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "FkCdCliente" }, "fk_tb_carrinho_tb_cliente1_idx");

                    b.ToTable("tb_carrinho", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbCategoria", b =>
                {
                    b.Property<int>("CdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_categoria");

                    b.Property<string>("DsCategoria")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ds_categoria");

                    b.Property<string>("NmCategoria")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_categoria");

                    b.HasKey("CdCategoria")
                        .HasName("PRIMARY");

                    b.ToTable("tb_categoria", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbCliente", b =>
                {
                    b.Property<int>("CdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_cliente");

                    b.Property<DateTime>("DtNascimento")
                        .HasColumnType("date")
                        .HasColumnName("dt_nascimento");

                    b.Property<string>("NmCliente")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("nm_cliente");

                    b.Property<string>("NmLogin")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_login");

                    b.Property<string>("NmSenha")
                        .IsRequired()
                        .HasMaxLength(16)
                        .HasColumnType("varchar(16)")
                        .HasColumnName("nm_senha");

                    b.Property<string>("NmSobrenome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("nm_sobrenome");

                    b.Property<string>("NrTelefone")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("char(11)")
                        .HasColumnName("nr_telefone")
                        .IsFixedLength();

                    b.HasKey("CdCliente")
                        .HasName("PRIMARY");

                    b.ToTable("tb_cliente", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbCompra", b =>
                {
                    b.Property<int>("CdCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_compra");

                    b.Property<int>("TbClienteCdCliente")
                        .HasColumnType("int")
                        .HasColumnName("tb_cliente_cd_cliente");

                    b.Property<string>("VlTotalCompra")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("vl_total_compra");

                    b.HasKey("CdCompra")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "TbClienteCdCliente" }, "fk_tb_compra_tb_cliente1_idx");

                    b.ToTable("tb_compra", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbEndereco", b =>
                {
                    b.Property<int>("CdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_endereco");

                    b.Property<int>("FkCdCliente")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_cliente");

                    b.Property<string>("NmBairro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_bairro");

                    b.Property<string>("NmCidade")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_cidade");

                    b.Property<string>("NmLogradouro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_logradouro");

                    b.Property<string>("NrCep")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("char(8)")
                        .HasColumnName("nr_cep")
                        .IsFixedLength();

                    b.Property<long>("NrEndereco")
                        .HasColumnType("bigint")
                        .HasColumnName("nr_endereco");

                    b.Property<string>("SgEstado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("char(2)")
                        .HasColumnName("sg_estado")
                        .IsFixedLength();

                    b.HasKey("CdEndereco")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdCliente" }, "fk_tb_endereco_tb_cliente1_idx");

                    b.ToTable("tb_endereco", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbFavorito", b =>
                {
                    b.Property<int>("CdFavorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_favorito");

                    b.Property<int>("FkCdCliente")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_cliente");

                    b.HasKey("CdFavorito", "FkCdCliente")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "FkCdCliente" }, "fk_tb_favorito_tb_cliente1_idx");

                    b.ToTable("tb_favorito", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbItemCarrinho", b =>
                {
                    b.Property<int>("CdItemCarrinho")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_item_carrinho");

                    b.Property<int>("FkCdCarrinho")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_carrinho");

                    b.Property<int>("FkCdProduto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_produto");

                    b.HasKey("CdItemCarrinho")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdCarrinho" }, "fk_tb_produto_has_tb_carrinho_tb_carrinho1_idx");

                    b.HasIndex(new[] { "FkCdProduto" }, "fk_tb_produto_has_tb_carrinho_tb_produto1_idx");

                    b.ToTable("tb_item_carrinho", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbItemCompra", b =>
                {
                    b.Property<int>("CdItemCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_item_compra");

                    b.Property<int>("FkCdCompra")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_compra");

                    b.Property<int>("FkCdProduto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_produto");

                    b.Property<decimal>("VlItemCompra")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("vl_item_compra");

                    b.HasKey("CdItemCompra")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdCompra" }, "fk_tb_produto_has_tb_compra_tb_compra1_idx");

                    b.HasIndex(new[] { "FkCdProduto" }, "fk_tb_produto_has_tb_compra_tb_produto1_idx");

                    b.ToTable("tb_item_compra", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbItemFavorito", b =>
                {
                    b.Property<int>("CdItemFavorito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_item_favorito");

                    b.Property<int>("FkCdFavorito")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_favorito");

                    b.Property<int>("FkCdProduto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_produto");

                    b.HasKey("CdItemFavorito")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdFavorito" }, "fk_tb_produto_has_tb_favorito_tb_favorito1_idx");

                    b.HasIndex(new[] { "FkCdProduto" }, "fk_tb_produto_has_tb_favorito_tb_produto1_idx");

                    b.ToTable("tb_item_favorito", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbMercante", b =>
                {
                    b.Property<int>("CdMercante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_mercante");

                    b.Property<string>("DsLoja")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ds_loja");

                    b.Property<int>("FkCdCliente")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_cliente");

                    b.Property<byte[]>("ImgLogo")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("img_logo");

                    b.Property<string>("NmLoja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_loja");

                    b.HasKey("CdMercante")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdCliente" }, "fk_tb_mercante_tb_cliente1_idx");

                    b.ToTable("tb_mercante", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbProduto", b =>
                {
                    b.Property<int>("CdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_produto");

                    b.Property<int>("FkCdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_categoria");

                    b.Property<string>("DsProduto")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("ds_produto");

                    b.Property<int>("FkCdMercante")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_mercante");

                    b.Property<string>("NmProduto")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nm_produto");

                    b.Property<int>("QtEstoque")
                        .HasColumnType("int")
                        .HasColumnName("qt_estoque");

                    b.Property<decimal>("VlProduto")
                        .HasPrecision(8, 2)
                        .HasColumnType("decimal(8,2)")
                        .HasColumnName("vl_produto");

                    b.HasKey("CdProduto", "FkCdCategoria")
                        .HasName("PRIMARY")
                        .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                    b.HasIndex(new[] { "FkCdCategoria" }, "fk_tb_produto_tb_categoria1_idx");

                    b.HasIndex(new[] { "FkCdMercante" }, "fk_tb_produto_tb_mercante1_idx");

                    b.ToTable("tb_produto", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbProdutoImagem", b =>
                {
                    b.Property<int>("CdProdutoImagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("cd_produto_imagem");

                    b.Property<string>("DsImagemProduto")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("ds_imagem_produto");

                    b.Property<int>("FkCdProduto")
                        .HasColumnType("int")
                        .HasColumnName("fk_cd_produto");

                    b.Property<byte[]>("ImgProduto")
                        .IsRequired()
                        .HasColumnType("blob")
                        .HasColumnName("img_produto");

                    b.HasKey("CdProdutoImagem")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "FkCdProduto" }, "fk_tb_produto_imagem_tb_produto1_idx");

                    b.ToTable("tb_produto_imagem", (string)null);
                });

            modelBuilder.Entity("buyge_backend.db.TbCarrinho", b =>
                {
                    b.HasOne("buyge_backend.db.TbCliente", "FkCdClienteNavigation")
                        .WithMany("TbCarrinho")
                        .HasForeignKey("FkCdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_tb_carrinho_tb_cliente1");

                    b.Navigation("FkCdClienteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbCompra", b =>
                {
                    b.HasOne("buyge_backend.db.TbCliente", "TbClienteCdClienteNavigation")
                        .WithMany("TbCompra")
                        .HasForeignKey("TbClienteCdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_tb_compra_tb_cliente1");

                    b.Navigation("TbClienteCdClienteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbEndereco", b =>
                {
                    b.HasOne("buyge_backend.db.TbCliente", "FkCdClienteNavigation")
                        .WithMany("TbEndereco")
                        .HasForeignKey("FkCdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_tb_endereco_tb_cliente1");

                    b.Navigation("FkCdClienteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbFavorito", b =>
                {
                    b.HasOne("buyge_backend.db.TbCliente", "FkCdClienteNavigation")
                        .WithMany("TbFavorito")
                        .HasForeignKey("FkCdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_tb_favorito_tb_cliente1");

                    b.Navigation("FkCdClienteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbItemCompra", b =>
                {
                    b.HasOne("buyge_backend.db.TbCompra", "FkCdCompraNavigation")
                        .WithMany("TbItemCompra")
                        .HasForeignKey("FkCdCompra")
                        .IsRequired()
                        .HasConstraintName("fk_tb_produto_has_tb_compra_tb_compra1");

                    b.Navigation("FkCdCompraNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbMercante", b =>
                {
                    b.HasOne("buyge_backend.db.TbCliente", "FkCdClienteNavigation")
                        .WithMany("TbMercante")
                        .HasForeignKey("FkCdCliente")
                        .IsRequired()
                        .HasConstraintName("fk_tb_mercante_tb_cliente1");

                    b.Navigation("FkCdClienteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbProduto", b =>
                {
                    b.HasOne("buyge_backend.db.TbCategoria", "FkCdCategoriaNavigation")
                        .WithMany("TbProduto")
                        .HasForeignKey("FkCdCategoria")
                        .IsRequired()
                        .HasConstraintName("fk_tb_produto_tb_categoria1");

                    b.HasOne("buyge_backend.db.TbMercante", "FkCdMercanteNavigation")
                        .WithMany("TbProduto")
                        .HasForeignKey("FkCdMercante")
                        .IsRequired()
                        .HasConstraintName("fk_tb_produto_tb_mercante1");

                    b.Navigation("FkCdCategoriaNavigation");

                    b.Navigation("FkCdMercanteNavigation");
                });

            modelBuilder.Entity("buyge_backend.db.TbCategoria", b =>
                {
                    b.Navigation("TbProduto");
                });

            modelBuilder.Entity("buyge_backend.db.TbCliente", b =>
                {
                    b.Navigation("TbCarrinho");

                    b.Navigation("TbCompra");

                    b.Navigation("TbEndereco");

                    b.Navigation("TbFavorito");

                    b.Navigation("TbMercante");
                });

            modelBuilder.Entity("buyge_backend.db.TbCompra", b =>
                {
                    b.Navigation("TbItemCompra");
                });

            modelBuilder.Entity("buyge_backend.db.TbMercante", b =>
                {
                    b.Navigation("TbProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
